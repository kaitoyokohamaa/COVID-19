{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api';\nexport const fetchData = async () => {\n  try {\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(url);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {\n    alert(\"okok\");\n  }\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${url}/daily`);\n    return data.map(({\n      confirmed,\n      deaths,\n      reportDate: date\n    }) => ({\n      confirmed: confirmed.total,\n      deaths: deaths.total,\n      date\n    }));\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/COVID-19/src/api/index.js"],"names":["axios","url","fetchData","data","confirmed","recovered","deaths","lastUpdate","get","error","alert","fetchDailyData","map","reportDate","date","total"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AACC,OAAO,MAAMC,SAAS,GAAE,YAAW;AAChC,MAAG;AAEC,UAAM;AAACC,MAAAA,IAAI,EAAC;AAACC,QAAAA,SAAD;AAAYC,QAAAA,SAAZ;AAAsBC,QAAAA,MAAtB;AAA6BC,QAAAA;AAA7B;AAAN,QAAkD,MAAMP,KAAK,CAACQ,GAAN,CAAUP,GAAV,CAA9D;AAEA,WAAQ;AAACG,MAAAA,SAAD;AAAWC,MAAAA,SAAX;AAAqBC,MAAAA,MAArB;AAA4BC,MAAAA;AAA5B,KAAR;AACH,GALD,CAKC,OAAME,KAAN,EAAY;AACTC,IAAAA,KAAK,CAAC,MAAD,CAAL;AACH;AACJ,CATO;AAWR,OAAO,MAAMC,cAAc,GAAG,YAAU;AACpC,MAAG;AACC,UAAM;AAACR,MAAAA;AAAD,QAAS,MAAMH,KAAK,CAACQ,GAAN,CAAW,GAAEP,GAAI,QAAjB,CAArB;AACA,WAAOE,IAAI,CAACS,GAAL,CAAS,CAAC;AAAER,MAAAA,SAAF;AAAaE,MAAAA,MAAb;AAAqBO,MAAAA,UAAU,EAAEC;AAAjC,KAAD,MAA8C;AAAEV,MAAAA,SAAS,EAAEA,SAAS,CAACW,KAAvB;AAA8BT,MAAAA,MAAM,EAAEA,MAAM,CAACS,KAA7C;AAAoDD,MAAAA;AAApD,KAA9C,CAAT,CAAP;AACH,GAHD,CAGC,OAAML,KAAN,EAAY,CAEZ;AACJ,CAPM","sourcesContent":["import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n export const fetchData= async () =>{\n    try{\n      \n        const {data:{confirmed, recovered,deaths,lastUpdate}} = await axios.get(url);\n     \n        return  {confirmed,recovered,deaths,lastUpdate}\n    }catch(error){\n        alert(\"okok\")\n    }\n}\n\nexport const fetchDailyData = async() =>{\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    }catch(error){\n\n    }\n}"]},"metadata":{},"sourceType":"module"}