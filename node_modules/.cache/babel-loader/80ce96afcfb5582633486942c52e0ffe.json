{"ast":null,"code":"var _jsxFileName = \"/Users/yokohamakaito/Desktop/COVID-19/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n      alert(\"しね\");\n    };\n\n    fetchMyAPI();\n  }, []);\n  console.log(dailyData);\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"#red\",\n        backgroundColor: \"rgba(255,0,0,0.5)\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/yokohamakaito/Desktop/COVID-19/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","setDailyData","fetchMyAPI","initialDailyData","alert","console","log","lineChart","labels","map","date","datasets","data","confirmed","label","borderColor","fill","deaths","backgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,UAAU,GAAG,YAAY;AAC7B,YAAMC,gBAAgB,GAAG,MAAMR,cAAc,EAA7C;AAEAM,MAAAA,YAAY,CAACE,gBAAD,CAAZ;AACAC,MAAAA,KAAK,CAAC,IAAD,CAAL;AACD,KALD;;AAOAF,IAAAA,UAAU;AACX,GATQ,EASN,EATM,CAAT;AAWAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,QAAMO,SAAS,GAAGP,SAAS,CAAC,CAAD,CAAT,gBAChB,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJQ,MAAAA,MAAM,EAAER,SAAS,CAACS,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAEZ,SAAS,CAACS,GAAV,CAAeG,IAAD,IAAUA,IAAI,CAACC,SAA7B,CADR;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEJ,QAAAA,IAAI,EAAEZ,SAAS,CAACS,GAAV,CAAc,CAAC;AAAEQ,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADR;AAEEH,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAE,MAHf;AAIEG,QAAAA,eAAe,EAAE,mBAJnB;AAKEF,QAAAA,IAAI,EAAE;AALR,OAPQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAqBd,IArBJ;AAuBA,sBAAO;AAAK,IAAA,SAAS,EAAElB,MAAM,CAACqB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCZ,SAAnC,CAAP;AACD,CAvCD;;AAyCA,eAAeR,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n      alert(\"しね\");\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  console.log(dailyData);\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map((data) => data.confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"#red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true\n          }\n        ]\n      }}\n    />\n  ) : null;\n\n  return <div className={styles.container}>{lineChart}</div>;\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}